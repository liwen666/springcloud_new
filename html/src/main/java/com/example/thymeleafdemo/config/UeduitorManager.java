package com.example.thymeleafdemo.config;

import com.baidu.ueditor.Entity.ImageEntity;
import com.example.thymeleafdemo.util.DateUtil;
import org.h2.util.StringUtils;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.stereotype.Component;
import org.springframework.util.Base64Utils;

import javax.sql.DataSource;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.lang.reflect.Field;
import java.net.URL;
import java.sql.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

@Component
public class UeduitorManager {

    public static DataSource dataSource = null;

    public static boolean insertObj(Object object) throws SQLException {

        ImageEntity imageEntity = (ImageEntity) object;

        String path = System.getProperty("user.dir") + "/html/src/main/java/com/baidu/ueditor/upload/image";
        String imageName = imageEntity.getId() + "_" + imageEntity.getName();
        File f = new File(path + "/" + imageName);
        if (!f.exists()) {
            System.out.println(imageName + "   图片本地地址  " + path);
            try {
                f.createNewFile();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        try {
            FileOutputStream fos = new FileOutputStream(f);
            System.out.println("image 编码====================" + EncodingDetect.getJavaEncode(imageEntity.getBytes()));
            System.out.println(Base64Utils.encodeToString(imageEntity.getBytes()));
            System.out.println("-----------------------------------------------------------------");
            System.out.println(com.alibaba.fastjson.JSONObject.toJSONString(imageEntity.getBytes()));
            System.out.println("image 编码====================");

            fos.write(imageEntity.getBytes());
            fos.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Connection conn = dataSource.getConnection();
        /**
         *将图片保存到本地
         */

        /**
         * 插入图片到数据库
         *
         */
        PreparedStatement preparedStatement = conn.prepareStatement("INSERT INTO hq_protal_bytearray(id,name,bytes)  VALUES(?,?,?)");
        preparedStatement.setString(1, imageEntity.getId());
        preparedStatement.setString(2, imageEntity.getName());
        preparedStatement.setBytes(3, imageEntity.getBytes());
        preparedStatement.executeUpdate();
        preparedStatement.close();
        //关闭连接
        conn.close();

        return true;
    }

    public static <T> T selectObj(String id, Class<T> clazz) throws SQLException {
        long first = System.currentTimeMillis();

        Connection connection = dataSource.getConnection();
        String sql = "select * from hq_protal_bytearray where id =?";
        PreparedStatement preparedStatement = connection.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        preparedStatement.setString(1, id);
        ResultSet resultSet = preparedStatement.executeQuery();
        System.out.println(resultSet.last());
        int row = resultSet.getRow();
        System.out.println(row);
        ResultSetMetaData rsm = resultSet.getMetaData(); //获得列集
        int col = rsm.getColumnCount();   //获得列的个数
        System.out.println("获得列的个数====" + col);
        String colName[] = new String[col];
        //取结果集中的表头名称, 放在colName数组中
        for (int i = 0; i < col; i++) {   //第一列,从1开始.所以获取列名,或列值,都是从1开始
            colName[i] = rsm.getColumnName(i + 1); //获得列值的方式一:通过其序号
        }//End for
        resultSet.beforeFirst();
        System.out.println("列名-------" + Arrays.toString(colName));
        Object data[][] = new Object[row][col];
        //取结果集中的数据, 放在data数组中
        for (int i = 0; i < row; i++) {
            resultSet.next();
            for (int j = 0; j < col; j++) {
                if (colName[j].equalsIgnoreCase("bytes")) {
                    data[i][j] = resultSet.getBytes(j + 1);
                    continue;
                }
                data[i][j] = resultSet.getString(j + 1);
                //System.out.println (data[i][j]);
            }
        }//End for
//        String colProcessIns[] = {"ID", "NAME", "BYTES", "BELONGID", "BELONGTYPE", "TIME"};
        String colProcessIns[] = colName;
        if (row > 0) {
            System.out.println("数据-----" + Arrays.toString(data[0]));
        }
//
        System.out.print("查询数据系统耗时：");
        System.out.println(System.currentTimeMillis() - first);
        List<T> list = new ArrayList<T>();
        /********************************************************/
        long conversionFirst = System.currentTimeMillis();
        for (Object[] s : data) {
            T target = null;
            try {
                target = clazz.newInstance();
            } catch (InstantiationException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }
            for (int i = 0; i < colProcessIns.length; i++) {
                Field[] declaredFields = target.getClass().getDeclaredFields();
                for (Field f : declaredFields) {
                    f.setAccessible(true);
                    if (f.getName().equalsIgnoreCase(colProcessIns[i])) {
                        System.out.println("字段名称-->" + f.getName() + "  表字段名称 -->" + colProcessIns[i] + "字段类型 -->" + f.getType().getName() + "字段值  " + s[i]);
                        if ("java.util.Date".equals(f.getType().getName())) {
                            System.out.println(s[i]);
                            try {
                                f.set(target, DateUtil.getDateYYMMDDhhmmss((String) s[i]));
                            } catch (IllegalAccessException e) {
                                e.printStackTrace();
                            }
                            continue;
                        }
                        if ("[B".equals(f.getType().getName())) {
                            System.out.println(s[i]);
                            try {
                                f.set(target, s[i]);
                            } catch (IllegalAccessException e) {
                                e.printStackTrace();
                            }
                            continue;
                        }

                        try {
                            f.set(target, s[i]);
                        } catch (IllegalAccessException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
            list.add(target);
        }
        System.out.println("数据转换耗时：");
        System.out.println(System.currentTimeMillis() - conversionFirst);

        /**
         *将图片保存到本地
         */

        /**
         * 插入图片到数据库
         *
         */
        preparedStatement.close();
        //关闭连接
        connection.close();
        return list.size() > 0 ? list.get(0) : null;
    }

    public static void main(String[] args) {
        String name = "我们";
        byte[] bytes = name.getBytes();
        String bytename = "5oiR5Lus";
        for (byte b : bytes) {
            System.out.println(b);
        }
        System.out.println("----------------");
        byte[] bytes1 = Base64Utils.decodeFromString(bytename);
        for (byte b : bytes1) {
            System.out.println(b);
        }
        System.out.println(com.alibaba.fastjson.JSONObject.toJSONString(bytes));

        String base64 = "";

        byte[] bytes2 = Base64Utils.decodeFromString(base64);

/**
 * 将图片转换成16进制
 */
        String Hex = StringUtils.convertBytesToHex(bytes2);
        System.out.println(Hex);
        byte[] bytes3 = StringUtils.convertHexToBytes(Hex);
        System.out.println("二进制转成64长度 "+base64.length());
        System.out.println("二进制转成16进制字符串 长度 "+Hex.length());
        System.out.println("二进制长度 "+ bytes3.length);


    }
}
